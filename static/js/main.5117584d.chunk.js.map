{"version":3,"sources":["logo.svg","Components/Movie.js","Components/Search.js","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","movie","poster","Poster","className","Title","Type","width","alt","src","Year","Search","search","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","size","path","mdiMovieSearch","initialState","loading","movies","currentPage","totalResults","errorMessage","reducer","state","action","payload","error","App","useReducer","dispatch","useState","useEffect","page","axios","then","jsonResponse","data","Response","Error","changePage","dir","totalPages","Math","round","retrievedMovies","mdiLoading","spin","map","index","logo","mdiChevronLeft","mdiChevronRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5117584d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n    \"https://media.comicbook.com/files/img/default-movie.png\";\r\n\r\nconst Movie = ({ movie }) => {\r\n    const poster =\r\n        movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"movie-title\">{movie.Title}</div>\r\n            <p>{movie.Type}</p>\r\n            <div>\r\n                <img\r\n                    width=\"200\"\r\n                    alt={`The movie titled: ${movie.Title}`}\r\n                    src={poster}\r\n                />\r\n            </div>\r\n            <p>({movie.Year})</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { useState } from \"react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiMovieSearch } from '@mdi/js';\r\n\r\nconst Search = ({ search, searchValue, setSearchValue }) => {\r\n\r\n    const handleSearchInputChanges = e => {\r\n        setSearchValue(e.target.value);\r\n    };\r\n\r\n    const resetInputField = () => {\r\n        setSearchValue(\"\");\r\n    };\r\n\r\n    const callSearchFunction = e => {\r\n        e.preventDefault();\r\n        search(searchValue);\r\n        resetInputField();\r\n    };\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <input\r\n                value={searchValue}\r\n                onChange={handleSearchInputChanges}\r\n                type=\"text\"\r\n            />\r\n\r\n            <button className=\"search-button\" onClick={callSearchFunction}>\r\n                <Icon size={1} path={mdiMovieSearch}/>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","export const initialState = {\r\n    loading: true,\r\n    movies: [],\r\n    currentPage: 1,\r\n    totalResults: null,\r\n    errorMessage: null\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SEARCH_MOVIES_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMessage: null\r\n            };\r\n        case \"SEARCH_MOVIES_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movies: action.payload.Search,\r\n                totalResults: action.payload.totalResults\r\n            };\r\n        case \"SEARCH_MOVIES_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.error\r\n            };\r\n        case \"CHANGE_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import './App.css';\nimport logo from './logo.svg';\nimport React, {useReducer, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Icon from '@mdi/react';\nimport { mdiLoading, mdiChevronRight, mdiChevronLeft } from '@mdi/js';\nimport Movie from \"./Components/Movie\";\nimport Search from \"./Components/Search\";\nimport { initialState, reducer } from \"./reducer\";\n\nconst BASE_API_URL = 'https://www.omdbapi.com/';\nconst API_KEY = '47d93115';\n\nconst App = () => {\n    const title = 'React App';\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const { movies, errorMessage, loading, totalResults, currentPage } = state;\n    const [searchValue, setSearchValue] = useState(\"Dark knight\");\n\n    // useEffect(() => {\n    //     axios.get(`${BASE_API_URL}?s=Dark+Knight&apikey=${API_KEY}`).then(jsonResponse => {\n    //         jsonResponse.data.currentPage = 1;\n    //         dispatch({\n    //             type: \"SEARCH_MOVIES_SUCCESS\",\n    //             payload: jsonResponse.data\n    //         });\n    //     });\n    // }, []);\n\n    useEffect(() => {\n        search(searchValue, currentPage);\n    }, [currentPage]) // TODO: here problem with load 2 str - after load page -> 1\n\n    const search = (searchValue, page) => {\n        dispatch({\n            type: \"SEARCH_MOVIES_REQUEST\"\n        });\n\n        axios(`${BASE_API_URL}?s=${searchValue}&page=${page}&apikey=${API_KEY}`).then(\n            jsonResponse => {\n                if (jsonResponse.data.Response === \"True\") {\n                    // jsonResponse.data.currentPage = 1;\n                    dispatch({\n                        type: \"SEARCH_MOVIES_SUCCESS\",\n                        payload: jsonResponse.data\n                    });\n                } else {\n                    dispatch({\n                        type: \"SEARCH_MOVIES_FAILURE\",\n                        error: jsonResponse.data.Error\n                    });\n                }\n            }\n        );\n    };\n\n    const changePage = (dir) => {\n        if (dir) {\n            if (currentPage < totalPages()) {\n                dispatch({\n                    type: \"CHANGE_PAGE\",\n                    payload: currentPage + 1\n                })\n            }\n        }\n        else {\n            if (currentPage > 0) {\n                dispatch({\n                    type: \"CHANGE_PAGE\",\n                    payload: currentPage - 1\n                })\n            }\n        }\n    }\n\n    const totalPages = () => {\n        return Math.round(totalResults / 10 + 1)\n    }\n\n    const retrievedMovies =\n        loading && !errorMessage ? (\n            <div className=\"load\">\n                <Icon path={mdiLoading} size={6} spin={true}/>\n            </div>\n        ) : errorMessage ? (\n            <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n            movies.map((movie, index) => (\n                <Movie key={`${index}-${movie.Title}`} movie={movie} />\n            ))\n        );\n\n    return (\n        <div className=\"App\">\n            <div className=\"m-container\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h3>{title}</h3>\n                </header>\n\n                <Search search={search} searchValue={searchValue} setSearchValue={setSearchValue}/>\n\n                <div className=\"movies\">{retrievedMovies}</div>\n\n                <div className=\"pages\">\n                    <button className=\"search-button\" onClick={() => changePage(false)}>\n                        <Icon className=\"icon\" size={1} path={mdiChevronLeft}/>\n                    </button>\n                    <p>{currentPage} / {totalPages()}</p>\n                    <button className=\"search-button\" onClick={() => changePage(true)}>\n                        <Icon className=\"icon\" size={1} path={mdiChevronRight}/>\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}